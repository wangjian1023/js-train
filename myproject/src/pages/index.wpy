<style lang = "less">
.text {
  display: flex;
  flex-direction: column;
  border-style: solid;
  background-color: gray;
  justify-content: center;// 主轴
  align-items: center;
  font-size:15px;
  margin: 10px 10px; // 框外上下左右 
  padding: 12px 12px  50px 50px;  // 字之间的间距 上zuo下右
  // margin-top: 13px;
   //border: 13px solid red;
  // border-radius: 13px;
  // border-bottom: 13px solid red;
  // border-top-left-radius: 7px;
  justify-content:  space-between; //平均分配
}
.box {
  display: flex;
  flex-direction: column;
  border-style: solid;
  justify-content: center;// 主轴
  align-items: center;
  // margin-top: 13px;
   //border: 13px solid red;
  // border-radius: 1r3px;
  border-bottom: 13px solid red;
  //border-top-left-radius: 7px;
  justify-content:  space-between; //平均分配

}

.other-button1 {
  background-color: black;
}

.other-button {
  color: red;
  display: flex;
  flex-direction: column;
}

</style>

<template>
  <view>
    <view class="box">
      <box>第一</box>
      <box>第二</box>
    </view>  
    <view class="text">
      <text>王建</text>
      <text>男</text>
      <text>23</text>
      <text>1995.10.23</text>
      <text>出生地：天津</text>
      <text>计算机科学与技术</text>
      <text>华北电力大学科技学院</text>
      <text>计算机14K2</text>
      <button type="按钮" hover-class="other-button1"> 按钮 </button>
    </view>
    <view class="other-button">
      <button type="按钮2" size='mini' hover-class="other-button" @tap="onTap"> 按钮2 </button>
      <text>{{age}}</text>
      <text>{{name}}</text>
      <text>{{born}}</text>
      <checkbox-group bindchange="checkboxChange">
        <label class="checkbox" wx:for="{{items}}">
          <checkbox class="other-button" value="{{item.name}}" checked="{{item.checked}}" />{{item.value}}
        </label>
      </checkbox-group>
      <form bindsubmit="formSubmit" bindreset="formReset">
        <view class="section section_gap">
          <view class="section__title">开关</view>
          <switch name="开关" />
        </view>
        <view class="section section_gap">
          <view class="section__title">滑动器</view>
          <slider name="滑动器" show-value></slider>
        </view>

        <view class="section">
          <view class="section__title">input</view>
          <input name="input" placeholder="please input here" />
        </view>
        <view class="section section_gap">
          <view class="section__title">radio</view>
          <radio-group name="radio-group">
            <label>
              <radio value="收音机1" />收音机1</label>
            <label>
              <radio value="收音机2" />收音机2</label>
          </radio-group>
        </view>
        <view class="section section_gap">
          <view class="section__title">checkbox</view>
          <checkbox-group name="checkbox">
            <label>
              <checkbox value="checkbox1" />checkbox1</label>
            <label>
              <checkbox value="checkbox2" />checkbox2</label>
          </checkbox-group>
        </view>
        <view class="btn-area">
          <button formType="submit">Submit</button>
          <button formType="reset">Reset</button>
        </view>
      </form>
      <view class="section">
        <input placeholder="这是一个可以自动聚焦的input" auto-focus/>
      </view>
      <view class="section">
        <input placeholder="这个只有在按钮点击的时候才聚焦" focus="{{focus}}" />
        <view class="btn-area">
          <button bindtap="bindButtonTap">使得输入框获取焦点</button>
        </view>
      </view>
      <view class="section">
        <input maxlength="10" placeholder="最大输入长度10" />
      </view>
      <view class="section">
        <view class="section__title">你输入的是：{{inputValue}}</view>
        <input bindinput="bindKeyInput" placeholder="输入同步到view中" />
      </view>
      <view class="section">
        <input bindinput="bindReplaceInput" placeholder="连续的两个1会变成2" />
      </view>
      <view class="section">
        <input password type="number" />
      </view>
      <view class="section">
        <input password type="text" />
      </view>
      <view class="section">
        <input type="digit" placeholder="带小数点的数字键盘" />
      </view>
      <view class="section">
        <input type="idcard" placeholder="身份证输入键盘" />
      </view>
      <view class="section">
        <input placeholder-style="color:red" placeholder="占位符字体是红色的" />
      </view>
      <view class="container">
        <video src="{{src}}"></video>
        <button bindtap="bindButtonTap">获取视频</button>
      </view>
      <view class="container">
        <image src="{{src}}"></image>
        <button bindtap="image">图片</button>
      </view>
      <view class="section">
        <view class="section__title">时间选择器</view>
        <picker mode="time" value="{{time}}" start="09:01" end="21:01" bindchange="bindTimeChange">
          <view class="picker">
            当前选择: {{time}}
          </view>
        </picker>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '档案'
  }
  data = {
    age: 20,
    name: '123',
    items: [
      { name: 'USA', value: '美国' },
      { name: 'CHN', value: '中国', checked: 'true' },
      { name: 'BRA', value: '巴西' },
      { name: 'JPN', value: '日本' },
      { name: 'ENG', value: '英国' },
      { name: 'TUR', value: '法国' }
    ],
    focus: false,
    inputValue: ''
  }
  mothods = {
    onTap() {
      let self = this
      self.age++
    },
    checkboxChange(e) {
      console.log('checkbox发生change事件，携带value值为：', e.detail.value)
    },

    formSubmit(e) {
      console.log('form发生了submit事件，携带数据为：', e.detail.value)
    },
    formReset() {
      console.log('form发生了reset事件')
    },
    bindButtonTap() {
      var that = this
      wepy.chooseVideo({
        sourceType: ['album', 'camera'],
        maxDuration: 60,
        camera: 'back',
        success(res) {
          that.setData({
            src: res.tempFilePath
          })
        }
      })
      this.setData({
        focus: true
      })
      wepy.saveVideoToPhotosAlbum({
        success(res) {
        }
      })
    },
    bindKeyInput(e) {
      this.setData({
        inputValue: e.detail.value
      })
    },
    bindReplaceInput(e) {
      var value = e.detail.value
      var pos = e.detail.cursor
      if (pos !== -1) {
        // 光标在中间
        var left = e.detail.value.slice(0, pos)
        // 计算光标的位置
        pos = left.replace(/11/g, '2').length
      }
      return {
        value: value.replace(/11/g, '2'),
        cursor: pos
      }
      // 或者直接返回字符串,光标在最后边
      // return value.replace(/11/g,'2')
    },
    image() {
      let self = this
      wepy.chooseImage({
        count: 1, // 默认9
        sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
        sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
        success: function(res) {
          // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
          self.src = res.tempFilePaths[0]
          self.setData({
            src: res.tempFilePaths[0]
          })
        }
      })
    },
    bindPickerChange: function(e) {
      console.log('picker发送选择改变，携带值为', e.detail.value)
      this.setData({
        index: e.detail.value
      })
    }
  }
  onload() { }
}
</script>
